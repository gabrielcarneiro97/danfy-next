generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Acumulado {
  cofins    Float?
  id        Int         @default(autoincrement()) @id
  pis       Float?
  totalSoma TotalSoma[]

  @@map("tb_acumulado")
}

model Aliquota {
  ativo           Boolean
  cofins          Float?
  csll            Float?
  donoCpfcnpj     String?   @map("dono_cpfcnpj")
  formaPagamento  String?   @map("forma_pagamento")
  icmsAliquota    Float?    @map("icms_aliquota")
  icmsReducao     Float?    @map("icms_reducao")
  id              Int       @default(autoincrement()) @id
  irpj            Float?
  iss             Float?
  issProfissional Boolean?  @map("iss_profissional")
  pis             Float?
  tributacao      String?
  validade        DateTime?
  pessoa          Pessoa?   @relation(fields: [donoCpfcnpj], references: [cpfcnpj])

  @@map("tb_aliquota")
}

model DifalAliquota {
  estadoId Int?    @map("estado_id")
  externo  Float?
  id       Int     @default(autoincrement()) @id
  interno  Float?
  estado   Estado? @relation(fields: [estadoId], references: [id])

  @@map("tb_difal_aliquota")
}

model Dominio {
  cnpj   String?
  codigo String?
  id     Int     @default(autoincrement()) @id
  numero String?

  @@map("tb_dominio")
}

model Endereco {
  cep          String?
  complemento  String?
  estadoId     Int?       @map("estado_id")
  id           Int        @default(autoincrement()) @id
  logradouro   String?
  municipioId  Int?       @map("municipio_id")
  numero       String?
  paisId       Int?       @map("pais_id")
  estado       Estado?    @relation(fields: [estadoId], references: [id])
  municipio    Municipio? @relation(fields: [municipioId], references: [id])
  pais         Pais?      @relation(fields: [paisId], references: [id])
  tb_pessoa    Pessoa[]

  @@map("tb_endereco")
}

model Estado {
  id                  Int             @id
  nome                String?
  sigla               String
  difalAliquota       DifalAliquota[]
  endereco            Endereco[]
  notaEstadoDestinoId Nota[]          @relation("tb_estadoTotb_nota_estado_destino_id")
  notaEstadoGeradorId Nota[]          @relation("tb_estadoTotb_nota_estado_gerador_id")

  @@map("tb_estado")
}

model Grupo {
  cor         String?
  descricao   String?
  donoCpfcnpj String?      @map("dono_cpfcnpj")
  id          Int          @default(autoincrement()) @id
  nome        String?
  pessoa      Pessoa?      @relation(fields: [donoCpfcnpj], references: [cpfcnpj])
  servico     Servico[]

  @@map("tb_grupo")
}

model Icms {
  baseCalculo    Float?       @map("base_calculo")
  composicaoBase Float?       @map("composicao_base")
  difalDestino   Float?        @map("difal_destino")
  difalOrigem    Float?        @map("difal_origem")
  id             Int          @default(autoincrement()) @id
  proprio        Float?
  imposto        Imposto[]

  @@map("tb_icms")
}

model Imposto {
  adicionalIr    Float?               @map("adicional_ir")
  cofins         Float?
  csll           Float?
  icmsId         Int?                 @map("icms_id")
  id             Int                  @default(autoincrement()) @id
  irpj           Float?
  iss            Float?
  pis            Float?
  total          Float?
  icms           Icms?                @relation(fields: [icmsId], references: [id])
  movimento      Movimento[]
  servico        Servico[]
  totalMovimento tb_total_movimento[]
  totalServico   tb_total_servico[]
  totalSoma      TotalSoma[]

  @@map("tb_imposto")
}

model MetaDados {
  id             Int        @default(autoincrement()) @id @map("md_id")
  ativo          Boolean?
  email          String?
  dataHora       DateTime?  @map("md_data_hora")
  refMovimentoId Int?       @map("ref_movimento_id")
  refServicoId   Int?       @map("ref_servico_id")
  tipo           String?
  movimento      Movimento? @relation(fields: [refMovimentoId], references: [id])
  servico        Servico?   @relation(fields: [refServicoId], references: [id])

  @@map("tb_meta_dados")
}

model Movimento {
  id               Int         @default(autoincrement()) @id
  conferido        Boolean?
  dataHora         DateTime    @map("data_hora")
  donoCpfcnpj      String      @map("dono_cpfcnpj")
  impostoId        Int?        @map("imposto_id")
  lucro            Float?
  metaDadosId      Int?        @map("meta_dados_id")
  notaFinalChave   String      @map("nota_final_chave")
  notaInicialChave String?     @map("nota_inicial_chave")
  valorSaida       Float?      @map("valor_saida")
  pessoa           Pessoa      @relation(fields: [donoCpfcnpj], references: [cpfcnpj])
  imposto          Imposto?    @relation(fields: [impostoId], references: [id])
  notaFinal        Nota        @relation("tb_movimento_nota_final_chaveTotb_nota", fields: [notaFinalChave], references: [chave])
  notaInicial      Nota?       @relation("tb_movimento_nota_inicial_chaveTotb_nota", fields: [notaInicialChave], references: [chave])
  metaDados        MetaDados[]

  @@map("tb_movimento")
}

model Municipio {
  id       Int        @id
  nome     String
  endereco Endereco[]

  @@map("tb_municipio")
}

model Nota {
  chave                         String           @id
  cfop                          String?
  dataHora                      DateTime?        @map("data_hora")
  destinatarioContribuinte      String?          @map("destinatario_contribuinte")
  destinatarioCpfcnpj           String           @map("destinatario_cpfcnpj")
  emitenteCpfcnpj               String           @map("emitente_cpfcnpj")
  estadoDestinoId               Int?             @map("estado_destino_id")
  estadoGeradorId               Int?             @map("estado_gerador_id")
  numero                        String?
  status                        String?
  textoComplementar             String?          @map("texto_complementar")
  tipo                          String?
  valor                         Float?
  destinatario                  Pessoa           @relation("tb_nota_destinatario_cpfcnpjTotb_pessoa", fields: [destinatarioCpfcnpj], references: [cpfcnpj])
  emitente                      Pessoa           @relation("tb_nota_emitente_cpfcnpjTotb_pessoa", fields: [emitenteCpfcnpj], references: [cpfcnpj])
  estadoDestino                 Estado?          @relation("tb_estadoTotb_nota_estado_destino_id", fields: [estadoDestinoId], references: [id])
  estadoGerador                 Estado?          @relation("tb_estadoTotb_nota_estado_gerador_id", fields: [estadoGeradorId], references: [id])
  movimentosComoNotaFinal       Movimento[]      @relation("tb_movimento_nota_final_chaveTotb_nota")
  movimentosComoNotaInicial     Movimento[]      @relation("tb_movimento_nota_inicial_chaveTotb_nota")
  produtos                      Produto[]
  produtoEstoqueComoNotaFinal   ProdutoEstoque[] @relation("tb_notaTotb_produto_estoque_nota_final_chave")
  produtoEstoqueComoNotaInicial ProdutoEstoque[] @relation("tb_notaTotb_produto_estoque_nota_inicial_chave")

  @@map("tb_nota")
}

model NotaServico {
  chave               String    @id
  dataHora            DateTime  @map("data_hora")
  descricao           String?
  destinatarioCpfcnpj String    @map("destinatario_cpfcnpj")
  emitenteCpfcnpj     String    @map("emitente_cpfcnpj")
  iss                 Float?
  numero              String
  retencaoId          Int?      @map("retencao_id")
  status              String
  valor               Float?
  destinatario        Pessoa    @relation("tb_nota_servico_destinatario_cpfcnpjTotb_pessoa", fields: [destinatarioCpfcnpj], references: [cpfcnpj])
  emitente            Pessoa    @relation("tb_nota_servico_emitente_cpfcnpjTotb_pessoa", fields: [emitenteCpfcnpj], references: [cpfcnpj])
  retencao            Retencao? @relation(fields: [retencaoId], references: [id])
  servicos            Servico[]

  @@map("tb_nota_servico")
}

model Pais {
  id          Int           @id
  nome        String
  endereco    Endereco[]

  @@map("tb_pais")
}

model Pessoa {
  cpfcnpj               String           @id
  enderecoId            Int?             @map("endereco_id")
  nome                  String
  endereco              Endereco?        @relation(fields: [enderecoId], references: [id])
  aliquotas             Aliquota[]
  grupo                 Grupo[]
  movimentos            Movimento[]
  notasRecebidas        Nota[]           @relation("tb_nota_destinatario_cpfcnpjTotb_pessoa")
  notasEmitidas         Nota[]           @relation("tb_nota_emitente_cpfcnpjTotb_pessoa")
  notasServicoRecebidas NotaServico[]    @relation("tb_nota_servico_destinatario_cpfcnpjTotb_pessoa")
  notasServicoEmitidas  NotaServico[]    @relation("tb_nota_servico_emitente_cpfcnpjTotb_pessoa")
  produtosEstoque       ProdutoEstoque[]
  servicos              Servico[]
  simples               tb_simples[]
  total                 tb_total[]

  @@map("tb_pessoa")
}

model Produto {
  id         Int     @default(autoincrement()) @id
  descricao  String
  nome       String
  notaChave  String? @map("nota_chave")
  quantidade Int?
  valor      Float?
  nota       Nota?   @relation(fields: [notaChave], references: [chave])

  @@map("tb_produto")
}

model ProdutoEstoque {
  id                                                     Int        @default(autoincrement()) @id
  ativo                                                  Boolean?
  data_entrada                                           DateTime?
  data_saida                                             DateTime?
  descricao                                              String?
  dono_cpfcnpj                                           String?
  nota_final_chave                                       String?
  nota_inicial_chave                                     String?
  produto_codigo                                         String?
  valor_entrada                                          Float?
  tb_pessoa                                              Pessoa? @relation(fields: [dono_cpfcnpj], references: [cpfcnpj])
  tb_nota_tb_notaTotb_produto_estoque_nota_final_chave   Nota?   @relation("tb_notaTotb_produto_estoque_nota_final_chave", fields: [nota_final_chave], references: [chave])
  tb_nota_tb_notaTotb_produto_estoque_nota_inicial_chave Nota?   @relation("tb_notaTotb_produto_estoque_nota_inicial_chave", fields: [nota_inicial_chave], references: [chave])

  @@map("tb_produto_estoque")
}

model Retencao {
  cofins           Float?
  csll             Float?
  id               Int                @default(autoincrement()) @id
  inss             Float?
  irpj             Float?
  iss              Float?
  pis              Float?
  total            Float?
  tb_nota_servico  NotaServico[]
  tb_servico       Servico[]
  tb_total_servico tb_total_servico[]
  totalSoma        TotalSoma[]

  @@map("tb_retencao")
}

model Servico {
  conferido       Boolean?
  data_hora       DateTime?
  dono_cpfcnpj    String?
  grupo_id        Int?
  id              Int              @default(autoincrement()) @id
  imposto_id      Int?
  meta_dados_id   Int?
  nota_chave      String?
  retencao_id     Int?
  valor           Float?
  tb_pessoa       Pessoa?          @relation(fields: [dono_cpfcnpj], references: [cpfcnpj])
  tb_grupo        Grupo?           @relation(fields: [grupo_id], references: [id])
  tb_imposto      Imposto?         @relation(fields: [imposto_id], references: [id])
  tb_nota_servico NotaServico? @relation(fields: [nota_chave], references: [chave])
  tb_retencao     Retencao?     @relation(fields: [retencao_id], references: [id])
  tb_meta_dados   MetaDados[]
}

model tb_simples {
  data_hora        DateTime?
  dono_cpfcnpj     String
  id               Int       @default(autoincrement()) @id
  total_doze       Float?
  total_exercicio  Float?
  total_mes        Float?
  total_movimentos Float?
  total_nao_retido Float?
  total_retido     Float?
  total_servicos   Float?
  tb_pessoa        Pessoa @relation(fields: [dono_cpfcnpj], references: [cpfcnpj])
}

model tb_total {
  anual              Boolean?
  data_hora          DateTime?
  dono_cpfcnpj       String?
  id                 Int                 @default(autoincrement()) @id
  total_movimento_id Int?
  total_servico_id   Int?
  total_soma_id      Int?
  trimestral         Boolean?
  tb_pessoa          Pessoa?          @relation(fields: [dono_cpfcnpj], references: [cpfcnpj])
  tb_total_movimento tb_total_movimento? @relation(fields: [total_movimento_id], references: [id])
  tb_total_servico   tb_total_servico?   @relation(fields: [total_servico_id], references: [id])
  totalSoma          TotalSoma?      @relation(fields: [total_soma_id], references: [id])
}

model tb_total_movimento {
  id          Int         @default(autoincrement()) @id
  imposto_id  Int?
  lucro       Float?
  valor_saida Float?
  tb_imposto  Imposto? @relation(fields: [imposto_id], references: [id])
  tb_total    tb_total[]
}

model tb_total_servico {
  id          Int          @default(autoincrement()) @id
  imposto_id  Int?
  retencao_id Int?
  total       Float?
  tb_imposto  Imposto?  @relation(fields: [imposto_id], references: [id])
  tb_retencao Retencao? @relation(fields: [retencao_id], references: [id])
  tb_total    tb_total[]
}

model TotalSoma {
  acumulado_id    Int?
  id              Int           @default(autoincrement()) @id
  imposto_id      Int?
  retencao_id     Int?
  valor_movimento Float?
  valor_servico   Float?
  acumulado       Acumulado? @relation(fields: [acumulado_id], references: [id])
  tb_imposto      Imposto?   @relation(fields: [imposto_id], references: [id])
  tb_retencao     Retencao?  @relation(fields: [retencao_id], references: [id])
  tb_total        tb_total[]
}

model tb_usuario {
  dominio_codigo String?
  id             String  @id
}
